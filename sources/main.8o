:macro offset ADDR {
	:calc a1 { 0xFF & ADDR >> 8 }
	:calc a2 { 0xFF & ADDR      }
	:byte a1
	:byte a2
}

:macro offsethi ADDR {
	:calc a1 { 0xFF & ADDR >> 8 }
	:byte a1
}

:macro offsetlo ADDR {
	:calc a1 { 0xFF & ADDR }
	:byte a1
}


: main
	hires
	plane 3

	objects_init

: main_redraw
	v0 := 1
	i := ninja_falling
	save v0 - v0

	va := 0
	set_redraw_flag

	map_render
	ninja_draw

: main_loop
		i := shake_screen_flag
		load v9 - v9
		if v9 == 0 begin
			main_process_input
			v0 := 4
			delay := v0
		end

		if v9 != 0 begin
			main_process_input

			v0 := 0xc0
			i := intensity_1
			v0 |= v9
			save v0 - v0

			v0 := 0xd0
			i := intensity_2
			v0 |= v9
			save v0 - v0

			va := 2
			:next intensity_1
			scroll-up 1

			shake_sound_sync

			:next intensity_2
			scroll-down 1

			v0 := 2
			delay := v0
		end

		i := frame_number
		load v0 - v0
		v0 += 1
		save v0 - v0


		objects_tick
		ninja_tick
		ninja_action_finish
		i := redraw_screen_flag
		load v0 - v0
		if v0 != 0 then
			jump main_redraw

	jump main_loop

: main_process_input
	loop
		ninja_process_input

		v0 := delay
		if v0 != 0 then
			again
	return

: shake_sound_sync
	i := long shake_sound
	audio
	buzzer := va

	jump sleep


: frame_number
	0

: redraw_screen_flag
	0
: shake_screen_flag
	0

: set_redraw_flag
	i := redraw_screen_flag
	save va - va
	return

: main_ending
	i := shake_screen_flag
	v2 := 0
	save v2 - v2

	v9 := 120
	va := 2
	loop
		v0 := random 3
		v0 += v0
		jump0 ending_shake_table
: ending_shake_table
		jump ending_shake_left
		jump ending_shake_right
		jump ending_shake_up
		jump ending_shake_down

: ending_shake_left
		scroll-left
		shake_sound_sync
		scroll-right
		shake_sound_sync
		jump ending_shake_next

: ending_shake_right
		scroll-right
		shake_sound_sync
		scroll-left
		shake_sound_sync
		jump ending_shake_next

: ending_shake_up
		scroll-up 4
		shake_sound_sync
		scroll-down 4
		shake_sound_sync
		jump ending_shake_next

: ending_shake_down
		scroll-down 4
		shake_sound_sync
		scroll-up 4
		shake_sound_sync

: ending_shake_next
		v9 += -1
		if v9 == 40 then
			clear
		if v9 != 0 then
	again

	i := teleport_ending
	jump ninja_spawn
