:const ninja_speed_left -2
:const ninja_speed_right 2

: ninja_current_animation_frame
	0

: ninja_current_pos
	40 16

: ninja_current_dir
	0
: ninja_jump_counter	#do not move it, current_dir reads it
	0
: ninja_falling			#do not move it, reading 3 registers at once
	0

:const ninja_jump_ticks 8


: ninja_jump_table
	0 5 5 4 2 -2 -4 -5 -5

: ninja_last_dir
	ninja_speed_right

: ninja_process_input
	v1 := 7
	v2 := 0
	if v1 key then
		v2 += ninja_speed_left
	v1 := 9
	if v1 key then
		v2 += ninja_speed_right

	v1 := 5
	if v1 key begin
		i := ninja_jump_counter
		load v1 - v1
		if v1 == 0 begin
			v1 := ninja_jump_ticks
			save v1 - v1
		end
	end

	i := ninja_current_dir
	save v2 - v2
	return

: ninja_tick
	i := ninja_current_dir
	load vc - vd

	v0 := vc
	v0 |= vd

	if v0 == 0 then
		return

	ninja_draw

	#jump height
	v3 := 0
	if vd != 0 begin
		i := ninja_jump_table
		i += vd
		load v3 - v3
		vd += -1
		i := ninja_jump_counter
		save vd - vd
	end

	i := ninja_current_pos
	load v1 - v2
	v1 += vc
	v2 += v3

	save v1 - v2

	if vc != 0 begin
		i := ninja_last_dir
		save vc - vc
	end

	va := v1
	vb := v2 #fixme: replace original registers

	vb += 16 #square below
	map_screen_to_tile

	ninja_next_animation
	jump ninja_draw

: ninja_next_animation
	i := ninja_current_animation_frame
	load v0 - v0
	v0 += 1
	if v0 >= 4 then
		v0 := 0
	save v0 - v0
	return

: ninja_draw
	i := ninja_current_animation_frame
	load v0 - v0
	if v0 == 3 then
		v0 := 1

	v0 += v0
	v0 += v0
	v0 += v0
	v0 += v0

	i := ninja_current_pos
	load v1 - v2

	i := ninja_last_dir
	load v3 - v3

	v4 := 0
	if v3 > 128 then
		v4 := 48

	i := long tile_ninja_0_0
	i += v0
	i += v4
	sprite v1 v2 8

	i := long tile_ninja_1_0
	i += v0
	i += v4
	v2 += 8
	sprite v1 v2 8

	return
