: objects_init
	va := screen_6_7_teleport_2
	teleport_activate
	va := screen_4_0_teleport_0
	teleport_activate
	va := screen_4_3_teleport_0
	teleport_activate
	return

: objects_loop_generic
	map_get_screen_index

	i := long map_objects_list
	i += v0

	load va - vb
	v0 := va
	v0 |= vb

	if v0 == 0 then
		return

	i := objects_loop_current_object_ptr
	save va - vb
	loop
		0xf0 00
		: objects_loop_current_object_ptr
		0 0
		load va - vb
		if va == -1 then
			return

		: object_loop_callback
		0 0

		i := objects_loop_current_object_ptr
		load v0 - v1
		v2 := 2
		v1 += v2
		v0 += vf
		save v0 - v1

	again

: object_tick_impl
	v9 := vb #type

	v0 := vb
	object_dispatch_init
	v0 := v9

	if v1 == -1 then #v1 == state, no object
		return

	jump object_dispatch_tick

: object_draw_impl
	v9 := vb #type

	v0 := vb
	object_dispatch_init

	if v1 == -1 then #v1 == state, no object
		return

	v0 := v9
	jump object_dispatch_draw

: object_collide_impl
	v9 := va
	v0 := vb
	i := ninja_current_pos
	load va - vb
	jump object_dispatch_collide_v9

: objects_tick
	:unpack 0x02 object_tick_impl #call
	i := object_loop_callback
	save v0 - v1
	jump objects_loop_generic

: objects_draw
	:unpack 0x02 object_draw_impl #call
	i := object_loop_callback
	save v0 - v1
	jump objects_loop_generic

: objects_collide
	:unpack 0x02 object_collide_impl #call
	i := object_loop_callback
	save v0 - v1
	jump objects_loop_generic

: objects_screen_entered
	map_get_screen_index
	v0 >>= v0 #result is map_index * 2
	if v0 == 0 then
		draw_intro_1
	if v0 == 1 then
		draw_intro_2
	if v0 == 2 then
		draw_intro_3

	i := ninja_flappy_mode
	v1 := 0
	if v0 == 44 then #flappy screens
		v1 := 1
	if v0 == 45 then
		v1 := 1
	save v1 - v1

	jump objects_draw

: object_draw_tiles #v0/v1 - width/height
	v2 := 0
	v4 := vd #y
	v6 := 16
	loop
		v3 := 0
		v5 := vc #x
		loop
			v3 += 1
			v5 += 8
			sprite v5 v4 8
			i += v6
			if v3 != v0 then
		again

		v4 += 8
		v2 += 1
		if v2 != v1 then
	again
	return
